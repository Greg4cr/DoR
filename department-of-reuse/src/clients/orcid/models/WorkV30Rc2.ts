/* tslint:disable */
/* eslint-disable */
/**
 * ORCID Public
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Citation,
    CitationFromJSON,
    CitationFromJSONTyped,
    CitationToJSON,
    CountryV30Rc2,
    CountryV30Rc2FromJSON,
    CountryV30Rc2FromJSONTyped,
    CountryV30Rc2ToJSON,
    CreatedDateV30Rc2,
    CreatedDateV30Rc2FromJSON,
    CreatedDateV30Rc2FromJSONTyped,
    CreatedDateV30Rc2ToJSON,
    ExternalIDsV30Rc2,
    ExternalIDsV30Rc2FromJSON,
    ExternalIDsV30Rc2FromJSONTyped,
    ExternalIDsV30Rc2ToJSON,
    LastModifiedDateV30Rc2,
    LastModifiedDateV30Rc2FromJSON,
    LastModifiedDateV30Rc2FromJSONTyped,
    LastModifiedDateV30Rc2ToJSON,
    PublicationDateV30Rc2,
    PublicationDateV30Rc2FromJSON,
    PublicationDateV30Rc2FromJSONTyped,
    PublicationDateV30Rc2ToJSON,
    SourceV30Rc2,
    SourceV30Rc2FromJSON,
    SourceV30Rc2FromJSONTyped,
    SourceV30Rc2ToJSON,
    TitleV30Rc2,
    TitleV30Rc2FromJSON,
    TitleV30Rc2FromJSONTyped,
    TitleV30Rc2ToJSON,
    UrlV30Rc2,
    UrlV30Rc2FromJSON,
    UrlV30Rc2FromJSONTyped,
    UrlV30Rc2ToJSON,
    WorkContributorsV30Rc2,
    WorkContributorsV30Rc2FromJSON,
    WorkContributorsV30Rc2FromJSONTyped,
    WorkContributorsV30Rc2ToJSON,
    WorkTitleV30Rc2,
    WorkTitleV30Rc2FromJSON,
    WorkTitleV30Rc2FromJSONTyped,
    WorkTitleV30Rc2ToJSON,
} from './';

/**
 * 
 * @export
 * @interface WorkV30Rc2
 */
export interface WorkV30Rc2 {
    /**
     * 
     * @type {CreatedDateV30Rc2}
     * @memberof WorkV30Rc2
     */
    createdDate?: CreatedDateV30Rc2;
    /**
     * 
     * @type {LastModifiedDateV30Rc2}
     * @memberof WorkV30Rc2
     */
    lastModifiedDate?: LastModifiedDateV30Rc2;
    /**
     * 
     * @type {SourceV30Rc2}
     * @memberof WorkV30Rc2
     */
    source?: SourceV30Rc2;
    /**
     * 
     * @type {number}
     * @memberof WorkV30Rc2
     */
    putCode?: number;
    /**
     * 
     * @type {string}
     * @memberof WorkV30Rc2
     */
    path?: string;
    /**
     * 
     * @type {WorkTitleV30Rc2}
     * @memberof WorkV30Rc2
     */
    title?: WorkTitleV30Rc2;
    /**
     * 
     * @type {TitleV30Rc2}
     * @memberof WorkV30Rc2
     */
    journalTitle?: TitleV30Rc2;
    /**
     * 
     * @type {string}
     * @memberof WorkV30Rc2
     */
    shortDescription?: string;
    /**
     * 
     * @type {Citation}
     * @memberof WorkV30Rc2
     */
    citation?: Citation;
    /**
     * 
     * @type {string}
     * @memberof WorkV30Rc2
     */
    type?: WorkV30Rc2TypeEnum;
    /**
     * 
     * @type {PublicationDateV30Rc2}
     * @memberof WorkV30Rc2
     */
    publicationDate?: PublicationDateV30Rc2;
    /**
     * 
     * @type {ExternalIDsV30Rc2}
     * @memberof WorkV30Rc2
     */
    externalIds?: ExternalIDsV30Rc2;
    /**
     * 
     * @type {UrlV30Rc2}
     * @memberof WorkV30Rc2
     */
    url?: UrlV30Rc2;
    /**
     * 
     * @type {WorkContributorsV30Rc2}
     * @memberof WorkV30Rc2
     */
    contributors?: WorkContributorsV30Rc2;
    /**
     * 
     * @type {string}
     * @memberof WorkV30Rc2
     */
    languageCode?: WorkV30Rc2LanguageCodeEnum;
    /**
     * 
     * @type {CountryV30Rc2}
     * @memberof WorkV30Rc2
     */
    country?: CountryV30Rc2;
    /**
     * 
     * @type {string}
     * @memberof WorkV30Rc2
     */
    visibility?: WorkV30Rc2VisibilityEnum;
}

/**
* @export
* @enum {string}
*/
export enum WorkV30Rc2TypeEnum {
    Annotation = 'ANNOTATION',
    ArtisticPerformance = 'ARTISTIC_PERFORMANCE',
    BookChapter = 'BOOK_CHAPTER',
    BookReview = 'BOOK_REVIEW',
    Book = 'BOOK',
    ConferenceAbstract = 'CONFERENCE_ABSTRACT',
    ConferencePaper = 'CONFERENCE_PAPER',
    ConferencePoster = 'CONFERENCE_POSTER',
    DataManagementPlan = 'DATA_MANAGEMENT_PLAN',
    DataSet = 'DATA_SET',
    DictionaryEntry = 'DICTIONARY_ENTRY',
    Disclosure = 'DISCLOSURE',
    DissertationThesis = 'DISSERTATION_THESIS',
    EditedBook = 'EDITED_BOOK',
    EncyclopediaEntry = 'ENCYCLOPEDIA_ENTRY',
    Invention = 'INVENTION',
    JournalArticle = 'JOURNAL_ARTICLE',
    JournalIssue = 'JOURNAL_ISSUE',
    LectureSpeech = 'LECTURE_SPEECH',
    License = 'LICENSE',
    MagazineArticle = 'MAGAZINE_ARTICLE',
    Manual = 'MANUAL',
    NewsletterArticle = 'NEWSLETTER_ARTICLE',
    NewspaperArticle = 'NEWSPAPER_ARTICLE',
    OnlineResource = 'ONLINE_RESOURCE',
    Other = 'OTHER',
    Patent = 'PATENT',
    PhysicalObject = 'PHYSICAL_OBJECT',
    Preprint = 'PREPRINT',
    RegisteredCopyright = 'REGISTERED_COPYRIGHT',
    Report = 'REPORT',
    ResearchTechnique = 'RESEARCH_TECHNIQUE',
    ResearchTool = 'RESEARCH_TOOL',
    Software = 'SOFTWARE',
    SpinOffCompany = 'SPIN_OFF_COMPANY',
    StandardsAndPolicy = 'STANDARDS_AND_POLICY',
    SupervisedStudentPublication = 'SUPERVISED_STUDENT_PUBLICATION',
    TechnicalStandard = 'TECHNICAL_STANDARD',
    Test = 'TEST',
    Trademark = 'TRADEMARK',
    Translation = 'TRANSLATION',
    Website = 'WEBSITE',
    WorkingPaper = 'WORKING_PAPER',
    Undefined = 'UNDEFINED'
}/**
* @export
* @enum {string}
*/
export enum WorkV30Rc2LanguageCodeEnum {
    Ab = 'ab',
    Aa = 'aa',
    Af = 'af',
    Ak = 'ak',
    Sq = 'sq',
    Am = 'am',
    Ar = 'ar',
    An = 'an',
    Hy = 'hy',
    As = 'as',
    Av = 'av',
    Ae = 'ae',
    Ay = 'ay',
    Az = 'az',
    Bm = 'bm',
    Ba = 'ba',
    Eu = 'eu',
    Be = 'be',
    Bn = 'bn',
    Bh = 'bh',
    Bi = 'bi',
    Bs = 'bs',
    Br = 'br',
    Bg = 'bg',
    My = 'my',
    Ca = 'ca',
    Ch = 'ch',
    Ce = 'ce',
    ZhCn = 'zh_CN',
    ZhTw = 'zh_TW',
    Cu = 'cu',
    Cv = 'cv',
    Kw = 'kw',
    Co = 'co',
    Cr = 'cr',
    Hr = 'hr',
    Cs = 'cs',
    Da = 'da',
    Dv = 'dv',
    Nl = 'nl',
    Dz = 'dz',
    En = 'en',
    Eo = 'eo',
    Et = 'et',
    Ee = 'ee',
    Fo = 'fo',
    Fj = 'fj',
    Fi = 'fi',
    Fr = 'fr',
    Fy = 'fy',
    Ff = 'ff',
    Gl = 'gl',
    Lg = 'lg',
    Ka = 'ka',
    De = 'de',
    El = 'el',
    Kl = 'kl',
    Gn = 'gn',
    Gu = 'gu',
    Ht = 'ht',
    Ha = 'ha',
    Iw = 'iw',
    Hz = 'hz',
    Hi = 'hi',
    Ho = 'ho',
    Hu = 'hu',
    Is = 'is',
    Io = 'io',
    Ig = 'ig',
    In = 'in',
    Ia = 'ia',
    Ie = 'ie',
    Iu = 'iu',
    Ik = 'ik',
    Ga = 'ga',
    It = 'it',
    Ja = 'ja',
    Jv = 'jv',
    Kn = 'kn',
    Kr = 'kr',
    Ks = 'ks',
    Kk = 'kk',
    Km = 'km',
    Ki = 'ki',
    Rw = 'rw',
    Ky = 'ky',
    Kv = 'kv',
    Kg = 'kg',
    Ko = 'ko',
    Ku = 'ku',
    Kj = 'kj',
    Lo = 'lo',
    La = 'la',
    Lv = 'lv',
    Li = 'li',
    Ln = 'ln',
    Lt = 'lt',
    Lu = 'lu',
    Lb = 'lb',
    Mk = 'mk',
    Mg = 'mg',
    Ms = 'ms',
    Ml = 'ml',
    Mt = 'mt',
    Gv = 'gv',
    Mi = 'mi',
    Mr = 'mr',
    Mh = 'mh',
    Mo = 'mo',
    Mn = 'mn',
    Na = 'na',
    Nv = 'nv',
    Ng = 'ng',
    Ne = 'ne',
    Nd = 'nd',
    Se = 'se',
    No = 'no',
    Nb = 'nb',
    Nn = 'nn',
    Ny = 'ny',
    Oc = 'oc',
    Oj = 'oj',
    Or = 'or',
    Om = 'om',
    Os = 'os',
    Pi = 'pi',
    Pa = 'pa',
    Fa = 'fa',
    Pl = 'pl',
    Pt = 'pt',
    Ps = 'ps',
    Qu = 'qu',
    Rm = 'rm',
    Ro = 'ro',
    Rn = 'rn',
    Ru = 'ru',
    Sm = 'sm',
    Sg = 'sg',
    Sa = 'sa',
    Sc = 'sc',
    Gd = 'gd',
    Sr = 'sr',
    Sn = 'sn',
    Ii = 'ii',
    Sd = 'sd',
    Si = 'si',
    Sk = 'sk',
    Sl = 'sl',
    So = 'so',
    Nr = 'nr',
    St = 'st',
    Es = 'es',
    Su = 'su',
    Sw = 'sw',
    Ss = 'ss',
    Sv = 'sv',
    Tl = 'tl',
    Ty = 'ty',
    Tg = 'tg',
    Ta = 'ta',
    Tt = 'tt',
    Te = 'te',
    Th = 'th',
    Bo = 'bo',
    Ti = 'ti',
    To = 'to',
    Ts = 'ts',
    Tn = 'tn',
    Tr = 'tr',
    Tk = 'tk',
    Tw = 'tw',
    Ug = 'ug',
    Uk = 'uk',
    Ur = 'ur',
    Uz = 'uz',
    Ve = 've',
    Vi = 'vi',
    Vo = 'vo',
    Wa = 'wa',
    Cy = 'cy',
    Wo = 'wo',
    Xh = 'xh',
    Ji = 'ji',
    Yo = 'yo',
    Za = 'za',
    Zu = 'zu'
}/**
* @export
* @enum {string}
*/
export enum WorkV30Rc2VisibilityEnum {
    Limited = 'LIMITED',
    RegisteredOnly = 'REGISTERED_ONLY',
    Public = 'PUBLIC',
    Private = 'PRIVATE'
}

export function WorkV30Rc2FromJSON(json: any): WorkV30Rc2 {
    return WorkV30Rc2FromJSONTyped(json, false);
}

export function WorkV30Rc2FromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkV30Rc2 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdDate': !exists(json, 'created-date') ? undefined : CreatedDateV30Rc2FromJSON(json['created-date']),
        'lastModifiedDate': !exists(json, 'last-modified-date') ? undefined : LastModifiedDateV30Rc2FromJSON(json['last-modified-date']),
        'source': !exists(json, 'source') ? undefined : SourceV30Rc2FromJSON(json['source']),
        'putCode': !exists(json, 'put-code') ? undefined : json['put-code'],
        'path': !exists(json, 'path') ? undefined : json['path'],
        'title': !exists(json, 'title') ? undefined : WorkTitleV30Rc2FromJSON(json['title']),
        'journalTitle': !exists(json, 'journal-title') ? undefined : TitleV30Rc2FromJSON(json['journal-title']),
        'shortDescription': !exists(json, 'short-description') ? undefined : json['short-description'],
        'citation': !exists(json, 'citation') ? undefined : CitationFromJSON(json['citation']),
        'type': !exists(json, 'type') ? undefined : json['type'],
        'publicationDate': !exists(json, 'publication-date') ? undefined : PublicationDateV30Rc2FromJSON(json['publication-date']),
        'externalIds': !exists(json, 'external-ids') ? undefined : ExternalIDsV30Rc2FromJSON(json['external-ids']),
        'url': !exists(json, 'url') ? undefined : UrlV30Rc2FromJSON(json['url']),
        'contributors': !exists(json, 'contributors') ? undefined : WorkContributorsV30Rc2FromJSON(json['contributors']),
        'languageCode': !exists(json, 'language-code') ? undefined : json['language-code'],
        'country': !exists(json, 'country') ? undefined : CountryV30Rc2FromJSON(json['country']),
        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],
    };
}

export function WorkV30Rc2ToJSON(value?: WorkV30Rc2 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created-date': CreatedDateV30Rc2ToJSON(value.createdDate),
        'last-modified-date': LastModifiedDateV30Rc2ToJSON(value.lastModifiedDate),
        'source': SourceV30Rc2ToJSON(value.source),
        'put-code': value.putCode,
        'path': value.path,
        'title': WorkTitleV30Rc2ToJSON(value.title),
        'journal-title': TitleV30Rc2ToJSON(value.journalTitle),
        'short-description': value.shortDescription,
        'citation': CitationToJSON(value.citation),
        'type': value.type,
        'publication-date': PublicationDateV30Rc2ToJSON(value.publicationDate),
        'external-ids': ExternalIDsV30Rc2ToJSON(value.externalIds),
        'url': UrlV30Rc2ToJSON(value.url),
        'contributors': WorkContributorsV30Rc2ToJSON(value.contributors),
        'language-code': value.languageCode,
        'country': CountryV30Rc2ToJSON(value.country),
        'visibility': value.visibility,
    };
}


